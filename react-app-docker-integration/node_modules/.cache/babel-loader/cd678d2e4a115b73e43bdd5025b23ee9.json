{"ast":null,"code":"var _jsxFileName = \"/Users/saptarshidey/Documents/multi/react-app-docker-integration/src/components/chart-view.js\";\nimport React, { Component } from 'react';\n\nclass ChartView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.modifyData = () => {\n      var data = this.props.pollutionData || [];\n      data.forEach((item, ind) => {\n        lables.push(item.city.name.split(' ')[0]);\n        values.push(item.aqi);\n      });\n      let graphData = {};\n      graphData.labels = lables;\n      graphData.datasets = [{\n        label: 'AQI',\n        backgroundColor: 'rgba(255,99,132,0.2)',\n        borderColor: 'rgba(255,99,132,1)',\n        borderWidth: 1,\n        hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n        hoverBorderColor: 'rgba(255,99,132,1)',\n        data: values\n      }];\n    };\n\n    this.state = {\n      graphData: {}\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"row graph-card\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      style: {\n        marginLeft: '0.2 rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Results\"), React.createElement(\"div\", {\n      className: \"graphType\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      class: \"radio-inline\",\n      name: \"graph-type\",\n      checked: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }), \" Bar\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      class: \"radio-inline\",\n      name: \"graph-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), \" Line\"), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"radio\",\n      class: \"radio-inline\",\n      name: \"graph-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \" Histogram\")));\n  }\n\n}\n\nexport default ChartView;","map":{"version":3,"sources":["/Users/saptarshidey/Documents/multi/react-app-docker-integration/src/components/chart-view.js"],"names":["React","Component","ChartView","constructor","props","modifyData","data","pollutionData","forEach","item","ind","lables","push","city","name","split","values","aqi","graphData","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","state","render","marginLeft"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,SAAN,SAAwBD,SAAxB,CAAkC;AAC9BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAMnBC,UANmB,GAMR,MAAI;AACX,UAAIC,IAAI,GAAC,KAAKF,KAAL,CAAWG,aAAX,IAA0B,EAAnC;AACAD,MAAAA,IAAI,CAACE,OAAL,CAAa,CAACC,IAAD,EAAMC,GAAN,KAAY;AACrBC,QAAAA,MAAM,CAACC,IAAP,CAAaH,IAAI,CAACI,IAAL,CAAUC,IAAX,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,CAAZ;AACAC,QAAAA,MAAM,CAACJ,IAAP,CAAYH,IAAI,CAACQ,GAAjB;AACH,OAHD;AAIA,UAAIC,SAAS,GAAC,EAAd;AACAA,MAAAA,SAAS,CAACC,MAAV,GAAmBR,MAAnB;AACAO,MAAAA,SAAS,CAACE,QAAV,GAAqB,CACjB;AACIC,QAAAA,KAAK,EAAE,KADX;AAEIC,QAAAA,eAAe,EAAE,sBAFrB;AAGIC,QAAAA,WAAW,EAAE,oBAHjB;AAIIC,QAAAA,WAAW,EAAE,CAJjB;AAKIC,QAAAA,oBAAoB,EAAE,sBAL1B;AAMIC,QAAAA,gBAAgB,EAAE,oBANtB;AAOIpB,QAAAA,IAAI,EAAEU;AAPV,OADiB,CAArB;AAYH,KA1BkB;;AAEf,SAAKW,KAAL,GAAa;AACTT,MAAAA,SAAS,EAAC;AADD,KAAb;AAGH;;AAsBDU,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAC;AAAZ,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAC,cAA1B;AAAyC,MAAA,IAAI,EAAC,YAA9C;AAA2D,MAAA,OAAO,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,SADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAC,cAA1B;AAAyC,MAAA,IAAI,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,UAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,KAAK,EAAC,cAA1B;AAAyC,MAAA,IAAI,EAAC,YAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP,eAHJ,CAFJ,CADJ;AAUH;;AAvC6B;;AA0ClC,eAAe3B,SAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass ChartView extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { \n            graphData:{}\n         };\n    }\n    modifyData=()=>{\n        var data=this.props.pollutionData||[];\n        data.forEach((item,ind)=>{\n            lables.push((item.city.name).split(' ')[0])\n            values.push(item.aqi)\n        })\n        let graphData={}\n        graphData.labels = lables\n        graphData.datasets = [\n            {\n                label: 'AQI',\n                backgroundColor: 'rgba(255,99,132,0.2)',\n                borderColor: 'rgba(255,99,132,1)',\n                borderWidth: 1,\n                hoverBackgroundColor: 'rgba(255,99,132,0.4)',\n                hoverBorderColor: 'rgba(255,99,132,1)',\n                data: values\n              }\n        ]\n\n    }\n    render() {\n        return (\n            <div className=\"row graph-card\">\n                <h3 style={{marginLeft:'0.2 rem'}}>Results</h3>\n                <div className='graphType'>\n                    <label><input type=\"radio\" class=\"radio-inline\" name=\"graph-type\" checked/> Bar</label>\n                    <label><input type=\"radio\" class=\"radio-inline\" name=\"graph-type\" /> Line</label>\n                    <label><input type=\"radio\" class=\"radio-inline\" name=\"graph-type\" /> Histogram</label>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ChartView;"]},"metadata":{},"sourceType":"module"}